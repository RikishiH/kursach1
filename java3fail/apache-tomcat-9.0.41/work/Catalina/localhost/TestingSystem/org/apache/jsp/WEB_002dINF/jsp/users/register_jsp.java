/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-05-13 19:54:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.users;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.bsuir.dev.senkevich.constants.CommandPath;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/Java/apache-tomcat-9.0.41/webapps/TestingSystem/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153374282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1618663774000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.bsuir.dev.senkevich.constants.CommandPath");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("    .box {\n");
      out.write("        position: relative;\n");
      out.write("        top: 0;\n");
      out.write("        opacity: 1;\n");
      out.write("        float: left;\n");
      out.write("        padding: 60px 50px 40px 50px;\n");
      out.write("        width: 100%;\n");
      out.write("        background: #fff;\n");
      out.write("        border-radius: 10px;\n");
      out.write("        transform: scale(1);\n");
      out.write("        -webkit-transform: scale(1);\n");
      out.write("        -ms-transform: scale(1);\n");
      out.write("        z-index: 5;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .box.back {\n");
      out.write("        transform: scale(.95);\n");
      out.write("        -webkit-transform: scale(.95);\n");
      out.write("        -ms-transform: scale(.95);\n");
      out.write("        top: -20px;\n");
      out.write("        opacity: .8;\n");
      out.write("        z-index: -1;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .box:before {\n");
      out.write("        content: \"\";\n");
      out.write("        width: 100%;\n");
      out.write("        height: 30px;\n");
      out.write("        border-radius: 10px;\n");
      out.write("        position: absolute;\n");
      out.write("        top: -10px;\n");
      out.write("        background: rgba(255, 255, 255, .6);\n");
      out.write("        left: 0;\n");
      out.write("        transform: scale(.95);\n");
      out.write("        -webkit-transform: scale(.95);\n");
      out.write("        -ms-transform: scale(.95);\n");
      out.write("        z-index: -1;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .overbox .title {\n");
      out.write("        color: #fff;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .overbox .title:before {\n");
      out.write("        background: #fff;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .title {\n");
      out.write("        width: 100%;\n");
      out.write("        float: left;\n");
      out.write("        line-height: 46px;\n");
      out.write("        font-size: 34px;\n");
      out.write("        font-weight: 700;\n");
      out.write("        letter-spacing: 2px;\n");
      out.write("        color: #279BE4;\n");
      out.write("        position: relative;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .title:before {\n");
      out.write("        content: \"\";\n");
      out.write("        width: 5px;\n");
      out.write("        height: 100%;\n");
      out.write("        position: absolute;\n");
      out.write("        top: 0;\n");
      out.write("        left: -50px;\n");
      out.write("        background: #279BE4;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input,\n");
      out.write("    .input label,\n");
      out.write("    .input input,\n");
      out.write("    .input .spin,\n");
      out.write("    .button,\n");
      out.write("    .button button .button.login button i.fa,\n");
      out.write("    .material-button .shape:before,\n");
      out.write("    .material-button .shape:after,\n");
      out.write("    .button.login button {\n");
      out.write("        transition: 300ms cubic-bezier(.4, 0, .2, 1);\n");
      out.write("        -webkit-transition: 300ms cubic-bezier(.4, 0, .2, 1);\n");
      out.write("        -ms-transition: 300ms cubic-bezier(.4, 0, .2, 1);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .material-button,\n");
      out.write("    .alt-2,\n");
      out.write("    .material-button .shape,\n");
      out.write("    .alt-2 .shape,\n");
      out.write("    .box {\n");
      out.write("        transition: 400ms cubic-bezier(.4, 0, .2, 1);\n");
      out.write("        -webkit-transition: 400ms cubic-bezier(.4, 0, .2, 1);\n");
      out.write("        -ms-transition: 400ms cubic-bezier(.4, 0, .2, 1);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input,\n");
      out.write("    .input label,\n");
      out.write("    .input input,\n");
      out.write("    .input .spin,\n");
      out.write("    .button,\n");
      out.write("    .button button {\n");
      out.write("        width: 100%;\n");
      out.write("        float: left;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input,\n");
      out.write("    .button {\n");
      out.write("        margin-top: 30px;\n");
      out.write("        height: 70px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input,\n");
      out.write("    .input input,\n");
      out.write("    .button,\n");
      out.write("    .button button {\n");
      out.write("        position: relative;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input input {\n");
      out.write("        height: 60px;\n");
      out.write("        top: 10px;\n");
      out.write("        border: none;\n");
      out.write("        background: transparent;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input input,\n");
      out.write("    .input label,\n");
      out.write("    .button button {\n");
      out.write("        font-family: 'Roboto', sans-serif;\n");
      out.write("        font-size: 24px;\n");
      out.write("        color: rgba(0, 0, 0, 0.8);\n");
      out.write("        font-weight: 300;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input:before,\n");
      out.write("    .input .spin {\n");
      out.write("        width: 100%;\n");
      out.write("        height: 1px;\n");
      out.write("        position: absolute;\n");
      out.write("        bottom: 0;\n");
      out.write("        left: 0;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input:before {\n");
      out.write("        content: \"\";\n");
      out.write("        background: rgba(0, 0, 0, 0.1);\n");
      out.write("        z-index: 3;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input .spin {\n");
      out.write("        background: #279BE4;\n");
      out.write("        z-index: 4;\n");
      out.write("        width: 0;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .overbox .input .spin {\n");
      out.write("        background: rgba(255, 255, 255, 1);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .overbox .input:before {\n");
      out.write("        background: rgba(255, 255, 255, 0.5);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .input label {\n");
      out.write("        position: absolute;\n");
      out.write("        top: 10px;\n");
      out.write("        left: 0;\n");
      out.write("        z-index: 2;\n");
      out.write("        cursor: pointer;\n");
      out.write("        line-height: 60px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button.login {\n");
      out.write("        width: 60%;\n");
      out.write("        left: 20%;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button.login button,\n");
      out.write("    .button button {\n");
      out.write("        width: 100%;\n");
      out.write("        line-height: 64px;\n");
      out.write("        left: 0%;\n");
      out.write("        background-color: transparent;\n");
      out.write("        border: 3px solid rgba(0, 0, 0, 0.1);\n");
      out.write("        font-weight: 900;\n");
      out.write("        font-size: 18px;\n");
      out.write("        color: rgba(0, 0, 0, 0.2);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button.login {\n");
      out.write("        margin-top: 30px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button {\n");
      out.write("        margin-top: 20px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button button {\n");
      out.write("        background-color: #fff;\n");
      out.write("        color: #279BE4;\n");
      out.write("        border: none;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button.login button.active {\n");
      out.write("        border: 3px solid transparent;\n");
      out.write("        color: #fff !important;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button.login button.active span {\n");
      out.write("        opacity: 0;\n");
      out.write("        transform: scale(0);\n");
      out.write("        -webkit-transform: scale(0);\n");
      out.write("        -ms-transform: scale(0);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button.login button.active i.fa {\n");
      out.write("        opacity: 1;\n");
      out.write("        transform: scale(1) rotate(-0deg);\n");
      out.write("        -webkit-transform: scale(1) rotate(-0deg);\n");
      out.write("        -ms-transform: scale(1) rotate(-0deg);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button.login button i.fa {\n");
      out.write("        width: 100%;\n");
      out.write("        height: 100%;\n");
      out.write("        position: absolute;\n");
      out.write("        top: 0;\n");
      out.write("        left: 0;\n");
      out.write("        line-height: 60px;\n");
      out.write("        transform: scale(0) rotate(-45deg);\n");
      out.write("        -webkit-transform: scale(0) rotate(-45deg);\n");
      out.write("        -ms-transform: scale(0) rotate(-45deg);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button {\n");
      out.write("        margin: 40px 0;\n");
      out.write("        overflow: hidden;\n");
      out.write("        z-index: 2;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .button button {\n");
      out.write("        cursor: pointer;\n");
      out.write("        position: relative;\n");
      out.write("        z-index: 2;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .pass-forgot {\n");
      out.write("        width: 100%;\n");
      out.write("        float: left;\n");
      out.write("        text-align: center;\n");
      out.write("        color: rgba(0, 0, 0, 0.4);\n");
      out.write("        font-size: 18px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .click-efect {\n");
      out.write("        position: absolute;\n");
      out.write("        top: 0;\n");
      out.write("        left: 0;\n");
      out.write("        background: #279BE4;\n");
      out.write("        border-radius: 50%;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    body {\n");
      out.write("        background-image: url(/static/img/background.jpg);\n");
      out.write("        background-position: center;\n");
      out.write("        background-size: cover;\n");
      out.write("        background-repeat: no-repeat;\n");
      out.write("        min-height: 100vh;\n");
      out.write("        font-family: 'Roboto', sans-serif;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    body,\n");
      out.write("    html {\n");
      out.write("        overflow: hidden;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .materialContainer {\n");
      out.write("        width: 100%;\n");
      out.write("        max-width: 460px;\n");
      out.write("        position: absolute;\n");
      out.write("        top: 50%;\n");
      out.write("        left: 50%;\n");
      out.write("        transform: translate(-50%, -50%);\n");
      out.write("        -webkit-transform: translate(-50%, -50%);\n");
      out.write("        -ms-transform: translate(-50%, -50%);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    *,\n");
      out.write("    *:after,\n");
      out.write("    *::before {\n");
      out.write("        -webkit-box-sizing: border-box;\n");
      out.write("        -moz-box-sizing: border-box;\n");
      out.write("        box-sizing: border-box;\n");
      out.write("        margin: 0;\n");
      out.write("        padding: 0;\n");
      out.write("        text-decoration: none;\n");
      out.write("        list-style-type: none;\n");
      out.write("        outline: none;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tr.translate(\"register\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</title>\n");
      out.write("\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/templates/head.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/lib/jquery-3.2.0.min.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/lib/jquery.complexify.min.js\"></script>\n");
      out.write("\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/css/login-register.css\" rel=\"stylesheet\">\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/user/login-register.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/user/register.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"materialContainer\">\n");
      out.write("\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/templates/notice.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"box\">\n");
      out.write("\n");
      out.write("        <div class=\"title\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tr.translate(\"register\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("\n");
      out.write("        <form id=\"form\" action=\"");
      out.print( CommandPath.REGISTER );
      out.write("\" method=\"post\">\n");
      out.write("\n");
      out.write("            <div class=\"input\">\n");
      out.write("                <label for=\"email\" id=\"email-lbl\">Email</label>\n");
      out.write("                <input type=\"text\" name=\"email\" id=\"email\">\n");
      out.write("                <span class=\"spin\"></span>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"input\">\n");
      out.write("                <label for=\"first-name\" id=\"first-name-lbl\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tr.translate(\"first_name\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</label>\n");
      out.write("                <input type=\"text\" name=\"firstName\" id=\"first-name\">\n");
      out.write("                <span class=\"spin\"></span>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"input\">\n");
      out.write("                <label for=\"last-name\" id=\"last-name-lbl\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tr.translate(\"last_name\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</label>\n");
      out.write("                <input type=\"text\" name=\"lastName\" id=\"last-name\">\n");
      out.write("                <span class=\"spin\"></span>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"input\">\n");
      out.write("                <label for=\"pass\" id=\"pass-lbl\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tr.translate(\"password\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</label>\n");
      out.write("                <input type=\"password\" name=\"password\" id=\"pass\">\n");
      out.write("                <span class=\"spin\"></span>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"input\">\n");
      out.write("                <label for=\"repass\" id=\"repass-lbl\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tr.translate(\"password_confirm\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</label>\n");
      out.write("                <input type=\"password\" id=\"repass\">\n");
      out.write("                <span class=\"spin\"></span>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </form>\n");
      out.write("\n");
      out.write("        <div class=\"button login\">\n");
      out.write("            <button id=\"reg-btn\"><span id=\"reg-spn\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tr.translate(\"register\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></button>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.print( CommandPath.LOGIN );
      out.write("\">\n");
      out.write("        ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tr.translate(\"login\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("    </a>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
